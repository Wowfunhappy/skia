    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  constVal(0) = 0xBFA00000 (-1.25)
    4. copy_constant                  constVal(1) = 0
    5. copy_constant                  constVal(2) = 0x3F400000 (0.75)
    6. copy_constant                  constVal(3) = 0x40100000 (2.25)
    7. splat_2_constants              expectedA(0..1) = 0
    8. copy_constant                  expectedA(2) = 0x3F580000 (0.84375)
    9. splat_2_constants              expectedA(3), expectedB(0) = 0x3F800000 (1.0)
   10. copy_constant                  expectedB(1) = 0
   11. splat_2_constants              expectedB(2..3) = 0x3F800000 (1.0)
   12. copy_constant                  $0 = 0
   13. copy_slot_unmasked             $1 = expectedA(0)
   14. cmpeq_float                    $0 = equal($0, $1)
   15. splat_2_constants              $1..2 = 0
   16. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   17. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   18. bitwise_and_int                $1 &= $2
   19. bitwise_and_int                $0 &= $1
   20. splat_2_constants              $1..2 = 0
   21. copy_constant                  $3 = 0x3F580000 (0.84375)
   22. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   23. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   24. bitwise_and_int                $2 &= $3
   25. bitwise_and_int                $1 &= $2
   26. bitwise_and_int                $0 &= $1
   27. splat_2_constants              $1..2 = 0
   28. copy_constant                  $3 = 0x3F580000 (0.84375)
   29. copy_constant                  $4 = 0x3F800000 (1.0)
   30. copy_4_slots_unmasked          $5..8 = expectedA
   31. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   32. bitwise_and_2_ints             $1..2 &= $3..4
   33. bitwise_and_int                $1 &= $2
   34. bitwise_and_int                $0 &= $1
   35. copy_constant                  $1 = 0
   36. copy_slot_unmasked             $2 = expectedA(0)
   37. cmpeq_float                    $1 = equal($1, $2)
   38. bitwise_and_int                $0 &= $1
   39. splat_2_constants              $1..2 = 0
   40. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   41. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   42. bitwise_and_int                $1 &= $2
   43. bitwise_and_int                $0 &= $1
   44. splat_2_constants              $1..2 = 0
   45. copy_constant                  $3 = 0x3F580000 (0.84375)
   46. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   47. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   48. bitwise_and_int                $2 &= $3
   49. bitwise_and_int                $1 &= $2
   50. bitwise_and_int                $0 &= $1
   51. splat_2_constants              $1..2 = 0
   52. copy_constant                  $3 = 0x3F580000 (0.84375)
   53. copy_constant                  $4 = 0x3F800000 (1.0)
   54. copy_4_slots_unmasked          $5..8 = expectedA
   55. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   56. bitwise_and_2_ints             $1..2 &= $3..4
   57. bitwise_and_int                $1 &= $2
   58. bitwise_and_int                $0 &= $1
   59. copy_uniform                   $1 = colorRed(1)
   60. copy_uniform                   $2 = colorGreen(1)
   61. copy_constant                  $3 = 0xBFA00000 (-1.25)
   62. smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
   63. copy_slot_unmasked             $2 = expectedA(0)
   64. cmpeq_float                    $1 = equal($1, $2)
   65. bitwise_and_int                $0 &= $1
   66. copy_uniform                   $1 = colorRed(1)
   67. copy_slot_unmasked             $2 = $1
   68. copy_uniform                   $3 = colorGreen(1)
   69. copy_slot_unmasked             $4 = $3
   70. copy_constant                  $5 = 0xBFA00000 (-1.25)
   71. copy_constant                  $6 = 0
   72. smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
   73. copy_2_slots_unmasked          $3..4 = expectedA(0..1)
   74. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
   75. bitwise_and_int                $1 &= $2
   76. bitwise_and_int                $0 &= $1
   77. copy_uniform                   $1 = colorRed(1)
   78. swizzle_3                      $1..3 = ($1..3).xxx
   79. copy_uniform                   $4 = colorGreen(1)
   80. swizzle_3                      $4..6 = ($4..6).xxx
   81. copy_constant                  $7 = 0xBFA00000 (-1.25)
   82. copy_constant                  $8 = 0
   83. copy_constant                  $9 = 0x3F400000 (0.75)
   84. smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
   85. copy_3_slots_unmasked          $4..6 = expectedA(0..2)
   86. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
   87. bitwise_and_int                $2 &= $3
   88. bitwise_and_int                $1 &= $2
   89. bitwise_and_int                $0 &= $1
   90. copy_uniform                   $1 = colorRed(1)
   91. swizzle_4                      $1..4 = ($1..4).xxxx
   92. copy_uniform                   $5 = colorGreen(1)
   93. swizzle_4                      $5..8 = ($5..8).xxxx
   94. copy_4_slots_unmasked          $9..12 = constVal
   95. smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
   96. copy_4_slots_unmasked          $5..8 = expectedA
   97. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
   98. bitwise_and_2_ints             $1..2 &= $3..4
   99. bitwise_and_int                $1 &= $2
  100. bitwise_and_int                $0 &= $1
  101. copy_constant                  $1 = 0x3F800000 (1.0)
  102. copy_slot_unmasked             $2 = expectedB(0)
  103. cmpeq_float                    $1 = equal($1, $2)
  104. bitwise_and_int                $0 &= $1
  105. copy_constant                  $1 = 0x3F800000 (1.0)
  106. copy_constant                  $2 = 0
  107. copy_2_slots_unmasked          $3..4 = expectedB(0..1)
  108. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
  109. bitwise_and_int                $1 &= $2
  110. bitwise_and_int                $0 &= $1
  111. copy_constant                  $1 = 0x3F800000 (1.0)
  112. copy_constant                  $2 = 0
  113. copy_constant                  $3 = 0x3F800000 (1.0)
  114. copy_3_slots_unmasked          $4..6 = expectedB(0..2)
  115. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  116. bitwise_and_int                $2 &= $3
  117. bitwise_and_int                $1 &= $2
  118. bitwise_and_int                $0 &= $1
  119. copy_constant                  $1 = 0x3F800000 (1.0)
  120. copy_constant                  $2 = 0
  121. splat_2_constants              $3..4 = 0x3F800000 (1.0)
  122. copy_4_slots_unmasked          $5..8 = expectedB
  123. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  124. bitwise_and_2_ints             $1..2 &= $3..4
  125. bitwise_and_int                $1 &= $2
  126. bitwise_and_int                $0 &= $1
  127. copy_uniform                   $1 = colorRed(0)
  128. copy_uniform                   $2 = colorGreen(0)
  129. copy_constant                  $3 = 0xBFA00000 (-1.25)
  130. smoothstep_n_floats            $1 = smoothstep($1, $2, $3)
  131. copy_slot_unmasked             $2 = expectedB(0)
  132. cmpeq_float                    $1 = equal($1, $2)
  133. bitwise_and_int                $0 &= $1
  134. copy_2_uniforms                $1..2 = colorRed(0..1)
  135. copy_2_uniforms                $3..4 = colorGreen(0..1)
  136. copy_constant                  $5 = 0xBFA00000 (-1.25)
  137. copy_constant                  $6 = 0
  138. smoothstep_n_floats            $1..2 = smoothstep($1..2, $3..4, $5..6)
  139. copy_2_slots_unmasked          $3..4 = expectedB(0..1)
  140. cmpeq_2_floats                 $1..2 = equal($1..2, $3..4)
  141. bitwise_and_int                $1 &= $2
  142. bitwise_and_int                $0 &= $1
  143. copy_3_uniforms                $1..3 = colorRed(0..2)
  144. copy_3_uniforms                $4..6 = colorGreen(0..2)
  145. copy_constant                  $7 = 0xBFA00000 (-1.25)
  146. copy_constant                  $8 = 0
  147. copy_constant                  $9 = 0x3F400000 (0.75)
  148. smoothstep_n_floats            $1..3 = smoothstep($1..3, $4..6, $7..9)
  149. copy_3_slots_unmasked          $4..6 = expectedB(0..2)
  150. cmpeq_3_floats                 $1..3 = equal($1..3, $4..6)
  151. bitwise_and_int                $2 &= $3
  152. bitwise_and_int                $1 &= $2
  153. bitwise_and_int                $0 &= $1
  154. copy_4_uniforms                $1..4 = colorRed
  155. copy_4_uniforms                $5..8 = colorGreen
  156. copy_4_slots_unmasked          $9..12 = constVal
  157. smoothstep_n_floats            $1..4 = smoothstep($1..4, $5..8, $9..12)
  158. copy_4_slots_unmasked          $5..8 = expectedB
  159. cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
  160. bitwise_and_2_ints             $1..2 &= $3..4
  161. bitwise_and_int                $1 &= $2
  162. bitwise_and_int                $0 &= $1
  163. swizzle_4                      $0..3 = ($0..3).xxxx
  164. copy_4_uniforms                $4..7 = colorRed
  165. copy_4_uniforms                $8..11 = colorGreen
  166. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  167. load_src                       src.rgba = $0..3
