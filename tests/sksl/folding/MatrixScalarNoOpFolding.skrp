    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $51 = CondMask
    4. store_condition_mask           $82 = CondMask
    5. store_condition_mask           $98 = CondMask
    6. store_condition_mask           $150 = CondMask
    7. store_condition_mask           $181 = CondMask
    8. branch_if_no_lanes_active      branch_if_no_lanes_active +74 (label 6 at #82)
    9. store_return_mask              $182 = RetMask
   10. splat_4_constants              m = 0
   11. splat_4_constants              mm = 0
   12. splat_2_constants              $183..184 = 0
   13. swizzle_4                      $183..186 = ($183..186).yxxy
   14. copy_4_slots_unmasked          z = $183..186
   15. copy_4_uniforms                $183..186 = testMatrix2x2
   16. copy_4_slots_masked            m = Mask($183..186)
   17. copy_4_uniforms                $183..186 = testMatrix2x2
   18. copy_4_slots_masked            m = Mask($183..186)
   19. store_condition_mask           $183 = CondMask
   20. copy_4_slots_unmasked          $184..187 = m
   21. copy_4_uniforms                $188..191 = testMatrix2x2
   22. cmpne_4_floats                 $184..187 = notEqual($184..187, $188..191)
   23. bitwise_or_2_ints              $184..185 |= $186..187
   24. bitwise_or_int                 $184 |= $185
   25. merge_condition_mask           CondMask = $183 & $184
   26. copy_constant                  $185 = 0
   27. copy_slot_masked               [test_no_op_scalar_X_mat2].result = Mask($185)
   28. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   29. load_condition_mask            CondMask = $183
   30. store_condition_mask           $183 = CondMask
   31. copy_4_slots_unmasked          $184..187 = m
   32. copy_4_uniforms                $188..191 = testMatrix2x2
   33. cmpne_4_floats                 $184..187 = notEqual($184..187, $188..191)
   34. bitwise_or_2_ints              $184..185 |= $186..187
   35. bitwise_or_int                 $184 |= $185
   36. merge_condition_mask           CondMask = $183 & $184
   37. copy_constant                  $185 = 0
   38. copy_slot_masked               [test_no_op_scalar_X_mat2].result = Mask($185)
   39. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   40. load_condition_mask            CondMask = $183
   41. store_condition_mask           $183 = CondMask
   42. copy_4_slots_unmasked          $184..187 = m
   43. copy_4_uniforms                $188..191 = testMatrix2x2
   44. cmpne_4_floats                 $184..187 = notEqual($184..187, $188..191)
   45. bitwise_or_2_ints              $184..185 |= $186..187
   46. bitwise_or_int                 $184 |= $185
   47. merge_condition_mask           CondMask = $183 & $184
   48. copy_constant                  $185 = 0
   49. copy_slot_masked               [test_no_op_scalar_X_mat2].result = Mask($185)
   50. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   51. load_condition_mask            CondMask = $183
   52. splat_4_constants              $183..186 = 0
   53. copy_4_slots_unmasked          $187..190 = m
   54. sub_4_floats                   $183..186 -= $187..190
   55. copy_4_slots_masked            m = Mask($183..186)
   56. store_condition_mask           $183 = CondMask
   57. copy_4_slots_unmasked          $184..187 = m
   58. splat_4_constants              $188..191 = 0
   59. copy_4_uniforms                $192..195 = testMatrix2x2
   60. sub_4_floats                   $188..191 -= $192..195
   61. cmpne_4_floats                 $184..187 = notEqual($184..187, $188..191)
   62. bitwise_or_2_ints              $184..185 |= $186..187
   63. bitwise_or_int                 $184 |= $185
   64. merge_condition_mask           CondMask = $183 & $184
   65. copy_constant                  $185 = 0
   66. copy_slot_masked               [test_no_op_scalar_X_mat2].result = Mask($185)
   67. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   68. load_condition_mask            CondMask = $183
   69. splat_2_constants              $183..184 = 0
   70. swizzle_4                      $183..186 = ($183..186).yxxy
   71. copy_4_slots_masked            mm = Mask($183..186)
   72. splat_2_constants              $183..184 = 0
   73. swizzle_4                      $183..186 = ($183..186).yxxy
   74. copy_4_slots_masked            mm = Mask($183..186)
   75. copy_4_slots_unmasked          $187..190 = z
   76. cmpeq_4_floats                 $183..186 = equal($183..186, $187..190)
   77. bitwise_and_2_ints             $183..184 &= $185..186
   78. bitwise_and_int                $183 &= $184
   79. copy_slot_masked               [test_no_op_scalar_X_mat2].result = Mask($183)
   80. load_return_mask               RetMask = $182
   81. copy_slot_unmasked             $182 = [test_no_op_scalar_X_mat2].result
   82. label                          label 0x00000006
   83. copy_constant                  $151 = 0
   84. merge_condition_mask           CondMask = $181 & $182
   85. branch_if_no_lanes_active      branch_if_no_lanes_active +129 (label 5 at #214)
   86. store_return_mask              $152 = RetMask
   87. splat_4_constants              m₁(0..3) = 0
   88. splat_4_constants              m₁(4..7) = 0
   89. splat_4_constants              m₁(8), mm₁(0..2) = 0
   90. splat_4_constants              mm₁(3..6) = 0
   91. splat_2_constants              mm₁(7..8) = 0
   92. splat_2_constants              $153..154 = 0
   93. shuffle                        $153..161 = ($153..161)[1 0 0 0 1 0 0 0 1]
   94. copy_4_slots_unmasked          z₁(0..3) = $153..156
   95. copy_4_slots_unmasked          z₁(4..7) = $157..160
   96. copy_slot_unmasked             z₁(8) = $161
   97. copy_4_uniforms                $153..156 = testMatrix3x3(0..3)
   98. copy_4_uniforms                $157..160 = testMatrix3x3(4..7)
   99. copy_uniform                   $161 = testMatrix3x3(8)
  100. copy_4_slots_masked            m₁(0..3) = Mask($153..156)
  101. copy_4_slots_masked            m₁(4..7) = Mask($157..160)
  102. copy_slot_masked               m₁(8) = Mask($161)
  103. copy_4_uniforms                $153..156 = testMatrix3x3(0..3)
  104. copy_4_uniforms                $157..160 = testMatrix3x3(4..7)
  105. copy_uniform                   $161 = testMatrix3x3(8)
  106. copy_4_slots_masked            m₁(0..3) = Mask($153..156)
  107. copy_4_slots_masked            m₁(4..7) = Mask($157..160)
  108. copy_slot_masked               m₁(8) = Mask($161)
  109. store_condition_mask           $153 = CondMask
  110. copy_4_slots_unmasked          $154..157 = m₁(0..3)
  111. copy_4_slots_unmasked          $158..161 = m₁(4..7)
  112. copy_slot_unmasked             $162 = m₁(8)
  113. copy_4_uniforms                $163..166 = testMatrix3x3(0..3)
  114. copy_4_uniforms                $167..170 = testMatrix3x3(4..7)
  115. copy_uniform                   $171 = testMatrix3x3(8)
  116. cmpne_n_floats                 $154..162 = notEqual($154..162, $163..171)
  117. bitwise_or_4_ints              $155..158 |= $159..162
  118. bitwise_or_2_ints              $155..156 |= $157..158
  119. bitwise_or_int                 $155 |= $156
  120. bitwise_or_int                 $154 |= $155
  121. merge_condition_mask           CondMask = $153 & $154
  122. copy_constant                  $155 = 0
  123. copy_slot_masked               [test_no_op_scalar_X_mat3].result = Mask($155)
  124. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  125. load_condition_mask            CondMask = $153
  126. store_condition_mask           $153 = CondMask
  127. copy_4_slots_unmasked          $154..157 = m₁(0..3)
  128. copy_4_slots_unmasked          $158..161 = m₁(4..7)
  129. copy_slot_unmasked             $162 = m₁(8)
  130. copy_4_uniforms                $163..166 = testMatrix3x3(0..3)
  131. copy_4_uniforms                $167..170 = testMatrix3x3(4..7)
  132. copy_uniform                   $171 = testMatrix3x3(8)
  133. cmpne_n_floats                 $154..162 = notEqual($154..162, $163..171)
  134. bitwise_or_4_ints              $155..158 |= $159..162
  135. bitwise_or_2_ints              $155..156 |= $157..158
  136. bitwise_or_int                 $155 |= $156
  137. bitwise_or_int                 $154 |= $155
  138. merge_condition_mask           CondMask = $153 & $154
  139. copy_constant                  $155 = 0
  140. copy_slot_masked               [test_no_op_scalar_X_mat3].result = Mask($155)
  141. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  142. load_condition_mask            CondMask = $153
  143. store_condition_mask           $153 = CondMask
  144. copy_4_slots_unmasked          $154..157 = m₁(0..3)
  145. copy_4_slots_unmasked          $158..161 = m₁(4..7)
  146. copy_slot_unmasked             $162 = m₁(8)
  147. copy_4_uniforms                $163..166 = testMatrix3x3(0..3)
  148. copy_4_uniforms                $167..170 = testMatrix3x3(4..7)
  149. copy_uniform                   $171 = testMatrix3x3(8)
  150. cmpne_n_floats                 $154..162 = notEqual($154..162, $163..171)
  151. bitwise_or_4_ints              $155..158 |= $159..162
  152. bitwise_or_2_ints              $155..156 |= $157..158
  153. bitwise_or_int                 $155 |= $156
  154. bitwise_or_int                 $154 |= $155
  155. merge_condition_mask           CondMask = $153 & $154
  156. copy_constant                  $155 = 0
  157. copy_slot_masked               [test_no_op_scalar_X_mat3].result = Mask($155)
  158. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  159. load_condition_mask            CondMask = $153
  160. splat_4_constants              $153..156 = 0
  161. splat_4_constants              $157..160 = 0
  162. copy_constant                  $161 = 0
  163. copy_4_slots_unmasked          $162..165 = m₁(0..3)
  164. copy_4_slots_unmasked          $166..169 = m₁(4..7)
  165. copy_slot_unmasked             $170 = m₁(8)
  166. sub_n_floats                   $153..161 -= $162..170
  167. copy_4_slots_masked            m₁(0..3) = Mask($153..156)
  168. copy_4_slots_masked            m₁(4..7) = Mask($157..160)
  169. copy_slot_masked               m₁(8) = Mask($161)
  170. store_condition_mask           $153 = CondMask
  171. copy_4_slots_unmasked          $154..157 = m₁(0..3)
  172. copy_4_slots_unmasked          $158..161 = m₁(4..7)
  173. copy_slot_unmasked             $162 = m₁(8)
  174. splat_4_constants              $163..166 = 0
  175. splat_4_constants              $167..170 = 0
  176. copy_constant                  $171 = 0
  177. copy_4_uniforms                $172..175 = testMatrix3x3(0..3)
  178. copy_4_uniforms                $176..179 = testMatrix3x3(4..7)
  179. copy_uniform                   $180 = testMatrix3x3(8)
  180. sub_n_floats                   $163..171 -= $172..180
  181. cmpne_n_floats                 $154..162 = notEqual($154..162, $163..171)
  182. bitwise_or_4_ints              $155..158 |= $159..162
  183. bitwise_or_2_ints              $155..156 |= $157..158
  184. bitwise_or_int                 $155 |= $156
  185. bitwise_or_int                 $154 |= $155
  186. merge_condition_mask           CondMask = $153 & $154
  187. copy_constant                  $155 = 0
  188. copy_slot_masked               [test_no_op_scalar_X_mat3].result = Mask($155)
  189. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  190. load_condition_mask            CondMask = $153
  191. splat_2_constants              $153..154 = 0
  192. shuffle                        $153..161 = ($153..161)[1 0 0 0 1 0 0 0 1]
  193. copy_4_slots_masked            mm₁(0..3) = Mask($153..156)
  194. copy_4_slots_masked            mm₁(4..7) = Mask($157..160)
  195. copy_slot_masked               mm₁(8) = Mask($161)
  196. splat_2_constants              $153..154 = 0
  197. shuffle                        $153..161 = ($153..161)[1 0 0 0 1 0 0 0 1]
  198. copy_4_slots_masked            mm₁(0..3) = Mask($153..156)
  199. copy_4_slots_masked            mm₁(4..7) = Mask($157..160)
  200. copy_slot_masked               mm₁(8) = Mask($161)
  201. copy_4_slots_unmasked          $162..165 = z₁(0..3)
  202. copy_4_slots_unmasked          $166..169 = z₁(4..7)
  203. copy_slot_unmasked             $170 = z₁(8)
  204. cmpeq_n_floats                 $153..161 = equal($153..161, $162..170)
  205. bitwise_and_4_ints             $154..157 &= $158..161
  206. bitwise_and_2_ints             $154..155 &= $156..157
  207. bitwise_and_int                $154 &= $155
  208. bitwise_and_int                $153 &= $154
  209. copy_slot_masked               [test_no_op_scalar_X_mat3].result = Mask($153)
  210. load_return_mask               RetMask = $152
  211. copy_slot_unmasked             $152 = [test_no_op_scalar_X_mat3].result
  212. label                          label 0x00000007
  213. copy_slot_masked               $151 = Mask($152)
  214. label                          label 0x00000005
  215. load_condition_mask            CondMask = $181
  216. copy_constant                  $99 = 0
  217. merge_condition_mask           CondMask = $150 & $151
  218. branch_if_no_lanes_active      branch_if_no_lanes_active +161 (label 4 at #379)
  219. store_return_mask              $100 = RetMask
  220. copy_4_uniforms                testMatrix4x4(0..3) = testInputs
  221. copy_4_uniforms                testMatrix4x4(4..7) = testInputs
  222. copy_4_uniforms                testMatrix4x4(8..11) = testInputs
  223. copy_4_uniforms                testMatrix4x4(12..15) = testInputs
  224. splat_4_constants              m₂(0..3) = 0
  225. splat_4_constants              m₂(4..7) = 0
  226. splat_4_constants              m₂(8..11) = 0
  227. splat_4_constants              m₂(12..15) = 0
  228. splat_4_constants              mm₂(0..3) = 0
  229. splat_4_constants              mm₂(4..7) = 0
  230. splat_4_constants              mm₂(8..11) = 0
  231. splat_4_constants              mm₂(12..15) = 0
  232. splat_2_constants              $101..102 = 0
  233. shuffle                        $101..116 = ($101..116)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  234. copy_4_slots_unmasked          z₂(0..3) = $101..104
  235. copy_4_slots_unmasked          z₂(4..7) = $105..108
  236. copy_4_slots_unmasked          z₂(8..11) = $109..112
  237. copy_4_slots_unmasked          z₂(12..15) = $113..116
  238. copy_4_slots_unmasked          $101..104 = testMatrix4x4(0..3)
  239. copy_4_slots_unmasked          $105..108 = testMatrix4x4(4..7)
  240. copy_4_slots_unmasked          $109..112 = testMatrix4x4(8..11)
  241. copy_4_slots_unmasked          $113..116 = testMatrix4x4(12..15)
  242. copy_4_slots_masked            m₂(0..3) = Mask($101..104)
  243. copy_4_slots_masked            m₂(4..7) = Mask($105..108)
  244. copy_4_slots_masked            m₂(8..11) = Mask($109..112)
  245. copy_4_slots_masked            m₂(12..15) = Mask($113..116)
  246. copy_4_slots_unmasked          $101..104 = testMatrix4x4(0..3)
  247. copy_4_slots_unmasked          $105..108 = testMatrix4x4(4..7)
  248. copy_4_slots_unmasked          $109..112 = testMatrix4x4(8..11)
  249. copy_4_slots_unmasked          $113..116 = testMatrix4x4(12..15)
  250. copy_4_slots_masked            m₂(0..3) = Mask($101..104)
  251. copy_4_slots_masked            m₂(4..7) = Mask($105..108)
  252. copy_4_slots_masked            m₂(8..11) = Mask($109..112)
  253. copy_4_slots_masked            m₂(12..15) = Mask($113..116)
  254. store_condition_mask           $101 = CondMask
  255. copy_4_slots_unmasked          $102..105 = m₂(0..3)
  256. copy_4_slots_unmasked          $106..109 = m₂(4..7)
  257. copy_4_slots_unmasked          $110..113 = m₂(8..11)
  258. copy_4_slots_unmasked          $114..117 = m₂(12..15)
  259. copy_4_slots_unmasked          $118..121 = testMatrix4x4(0..3)
  260. copy_4_slots_unmasked          $122..125 = testMatrix4x4(4..7)
  261. copy_4_slots_unmasked          $126..129 = testMatrix4x4(8..11)
  262. copy_4_slots_unmasked          $130..133 = testMatrix4x4(12..15)
  263. cmpne_n_floats                 $102..117 = notEqual($102..117, $118..133)
  264. bitwise_or_4_ints              $110..113 |= $114..117
  265. bitwise_or_4_ints              $106..109 |= $110..113
  266. bitwise_or_4_ints              $102..105 |= $106..109
  267. bitwise_or_2_ints              $102..103 |= $104..105
  268. bitwise_or_int                 $102 |= $103
  269. merge_condition_mask           CondMask = $101 & $102
  270. copy_constant                  $103 = 0
  271. copy_slot_masked               [test_no_op_scalar_X_mat4].result = Mask($103)
  272. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  273. load_condition_mask            CondMask = $101
  274. store_condition_mask           $101 = CondMask
  275. copy_4_slots_unmasked          $102..105 = m₂(0..3)
  276. copy_4_slots_unmasked          $106..109 = m₂(4..7)
  277. copy_4_slots_unmasked          $110..113 = m₂(8..11)
  278. copy_4_slots_unmasked          $114..117 = m₂(12..15)
  279. copy_4_slots_unmasked          $118..121 = testMatrix4x4(0..3)
  280. copy_4_slots_unmasked          $122..125 = testMatrix4x4(4..7)
  281. copy_4_slots_unmasked          $126..129 = testMatrix4x4(8..11)
  282. copy_4_slots_unmasked          $130..133 = testMatrix4x4(12..15)
  283. cmpne_n_floats                 $102..117 = notEqual($102..117, $118..133)
  284. bitwise_or_4_ints              $110..113 |= $114..117
  285. bitwise_or_4_ints              $106..109 |= $110..113
  286. bitwise_or_4_ints              $102..105 |= $106..109
  287. bitwise_or_2_ints              $102..103 |= $104..105
  288. bitwise_or_int                 $102 |= $103
  289. merge_condition_mask           CondMask = $101 & $102
  290. copy_constant                  $103 = 0
  291. copy_slot_masked               [test_no_op_scalar_X_mat4].result = Mask($103)
  292. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  293. load_condition_mask            CondMask = $101
  294. store_condition_mask           $101 = CondMask
  295. copy_4_slots_unmasked          $102..105 = m₂(0..3)
  296. copy_4_slots_unmasked          $106..109 = m₂(4..7)
  297. copy_4_slots_unmasked          $110..113 = m₂(8..11)
  298. copy_4_slots_unmasked          $114..117 = m₂(12..15)
  299. copy_4_slots_unmasked          $118..121 = testMatrix4x4(0..3)
  300. copy_4_slots_unmasked          $122..125 = testMatrix4x4(4..7)
  301. copy_4_slots_unmasked          $126..129 = testMatrix4x4(8..11)
  302. copy_4_slots_unmasked          $130..133 = testMatrix4x4(12..15)
  303. cmpne_n_floats                 $102..117 = notEqual($102..117, $118..133)
  304. bitwise_or_4_ints              $110..113 |= $114..117
  305. bitwise_or_4_ints              $106..109 |= $110..113
  306. bitwise_or_4_ints              $102..105 |= $106..109
  307. bitwise_or_2_ints              $102..103 |= $104..105
  308. bitwise_or_int                 $102 |= $103
  309. merge_condition_mask           CondMask = $101 & $102
  310. copy_constant                  $103 = 0
  311. copy_slot_masked               [test_no_op_scalar_X_mat4].result = Mask($103)
  312. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  313. load_condition_mask            CondMask = $101
  314. splat_4_constants              $101..104 = 0
  315. splat_4_constants              $105..108 = 0
  316. splat_4_constants              $109..112 = 0
  317. splat_4_constants              $113..116 = 0
  318. copy_4_slots_unmasked          $117..120 = m₂(0..3)
  319. copy_4_slots_unmasked          $121..124 = m₂(4..7)
  320. copy_4_slots_unmasked          $125..128 = m₂(8..11)
  321. copy_4_slots_unmasked          $129..132 = m₂(12..15)
  322. sub_n_floats                   $101..116 -= $117..132
  323. copy_4_slots_masked            m₂(0..3) = Mask($101..104)
  324. copy_4_slots_masked            m₂(4..7) = Mask($105..108)
  325. copy_4_slots_masked            m₂(8..11) = Mask($109..112)
  326. copy_4_slots_masked            m₂(12..15) = Mask($113..116)
  327. store_condition_mask           $101 = CondMask
  328. copy_4_slots_unmasked          $102..105 = m₂(0..3)
  329. copy_4_slots_unmasked          $106..109 = m₂(4..7)
  330. copy_4_slots_unmasked          $110..113 = m₂(8..11)
  331. copy_4_slots_unmasked          $114..117 = m₂(12..15)
  332. splat_4_constants              $118..121 = 0
  333. splat_4_constants              $122..125 = 0
  334. splat_4_constants              $126..129 = 0
  335. splat_4_constants              $130..133 = 0
  336. copy_4_slots_unmasked          $134..137 = testMatrix4x4(0..3)
  337. copy_4_slots_unmasked          $138..141 = testMatrix4x4(4..7)
  338. copy_4_slots_unmasked          $142..145 = testMatrix4x4(8..11)
  339. copy_4_slots_unmasked          $146..149 = testMatrix4x4(12..15)
  340. sub_n_floats                   $118..133 -= $134..149
  341. cmpne_n_floats                 $102..117 = notEqual($102..117, $118..133)
  342. bitwise_or_4_ints              $110..113 |= $114..117
  343. bitwise_or_4_ints              $106..109 |= $110..113
  344. bitwise_or_4_ints              $102..105 |= $106..109
  345. bitwise_or_2_ints              $102..103 |= $104..105
  346. bitwise_or_int                 $102 |= $103
  347. merge_condition_mask           CondMask = $101 & $102
  348. copy_constant                  $103 = 0
  349. copy_slot_masked               [test_no_op_scalar_X_mat4].result = Mask($103)
  350. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  351. load_condition_mask            CondMask = $101
  352. splat_2_constants              $101..102 = 0
  353. shuffle                        $101..116 = ($101..116)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  354. copy_4_slots_masked            mm₂(0..3) = Mask($101..104)
  355. copy_4_slots_masked            mm₂(4..7) = Mask($105..108)
  356. copy_4_slots_masked            mm₂(8..11) = Mask($109..112)
  357. copy_4_slots_masked            mm₂(12..15) = Mask($113..116)
  358. splat_2_constants              $101..102 = 0
  359. shuffle                        $101..116 = ($101..116)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  360. copy_4_slots_masked            mm₂(0..3) = Mask($101..104)
  361. copy_4_slots_masked            mm₂(4..7) = Mask($105..108)
  362. copy_4_slots_masked            mm₂(8..11) = Mask($109..112)
  363. copy_4_slots_masked            mm₂(12..15) = Mask($113..116)
  364. copy_4_slots_unmasked          $117..120 = z₂(0..3)
  365. copy_4_slots_unmasked          $121..124 = z₂(4..7)
  366. copy_4_slots_unmasked          $125..128 = z₂(8..11)
  367. copy_4_slots_unmasked          $129..132 = z₂(12..15)
  368. cmpeq_n_floats                 $101..116 = equal($101..116, $117..132)
  369. bitwise_and_4_ints             $109..112 &= $113..116
  370. bitwise_and_4_ints             $105..108 &= $109..112
  371. bitwise_and_4_ints             $101..104 &= $105..108
  372. bitwise_and_2_ints             $101..102 &= $103..104
  373. bitwise_and_int                $101 &= $102
  374. copy_slot_masked               [test_no_op_scalar_X_mat4].result = Mask($101)
  375. load_return_mask               RetMask = $100
  376. copy_slot_unmasked             $100 = [test_no_op_scalar_X_mat4].result
  377. label                          label 0x00000008
  378. copy_slot_masked               $99 = Mask($100)
  379. label                          label 0x00000004
  380. load_condition_mask            CondMask = $150
  381. copy_constant                  $83 = 0
  382. merge_condition_mask           CondMask = $98 & $99
  383. branch_if_no_lanes_active      branch_if_no_lanes_active +114 (label 3 at #497)
  384. store_return_mask              $84 = RetMask
  385. splat_4_constants              m₃ = 0
  386. splat_4_constants              mm₃ = 0
  387. splat_2_constants              $85..86 = 0
  388. swizzle_4                      $85..88 = ($85..88).yxxy
  389. copy_4_slots_unmasked          z₃ = $85..88
  390. splat_4_constants              s = 0x3F800000 (1.0)
  391. copy_uniform                   scalar = testInputs(0)
  392. copy_constant                  $85 = 0
  393. copy_slot_unmasked             $86 = scalar
  394. swizzle_4                      $85..88 = ($85..88).yxxy
  395. copy_4_slots_masked            m₃ = Mask($85..88)
  396. copy_constant                  $85 = 0
  397. copy_slot_unmasked             $86 = scalar
  398. swizzle_4                      $85..88 = ($85..88).yxxy
  399. copy_4_slots_masked            m₃ = Mask($85..88)
  400. store_condition_mask           $85 = CondMask
  401. copy_4_slots_unmasked          $86..89 = m₃
  402. copy_constant                  $90 = 0
  403. copy_slot_unmasked             $91 = scalar
  404. swizzle_4                      $90..93 = ($90..93).yxxy
  405. cmpne_4_floats                 $86..89 = notEqual($86..89, $90..93)
  406. bitwise_or_2_ints              $86..87 |= $88..89
  407. bitwise_or_int                 $86 |= $87
  408. merge_condition_mask           CondMask = $85 & $86
  409. copy_constant                  $87 = 0
  410. copy_slot_masked               [test_no_op_mat2_X_scalar].result = Mask($87)
  411. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  412. load_condition_mask            CondMask = $85
  413. copy_slot_unmasked             $85 = scalar
  414. swizzle_4                      $85..88 = ($85..88).xxxx
  415. copy_4_slots_unmasked          $89..92 = s
  416. div_4_floats                   $85..88 /= $89..92
  417. copy_4_slots_masked            m₃ = Mask($85..88)
  418. store_condition_mask           $85 = CondMask
  419. copy_4_slots_unmasked          $86..89 = m₃
  420. copy_slot_unmasked             $90 = scalar
  421. copy_slot_unmasked             $91 = scalar
  422. copy_slot_unmasked             $92 = scalar
  423. copy_slot_unmasked             $93 = scalar
  424. cmpne_4_floats                 $86..89 = notEqual($86..89, $90..93)
  425. bitwise_or_2_ints              $86..87 |= $88..89
  426. bitwise_or_int                 $86 |= $87
  427. merge_condition_mask           CondMask = $85 & $86
  428. copy_constant                  $87 = 0
  429. copy_slot_masked               [test_no_op_mat2_X_scalar].result = Mask($87)
  430. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  431. load_condition_mask            CondMask = $85
  432. copy_slot_unmasked             $85 = scalar
  433. swizzle_4                      $85..88 = ($85..88).xxxx
  434. copy_4_slots_unmasked          $89..92 = z₃
  435. add_4_floats                   $85..88 += $89..92
  436. copy_4_slots_masked            m₃ = Mask($85..88)
  437. copy_4_slots_unmasked          $85..88 = z₃
  438. copy_slot_unmasked             $89 = scalar
  439. swizzle_4                      $89..92 = ($89..92).xxxx
  440. add_4_floats                   $85..88 += $89..92
  441. copy_4_slots_masked            m₃ = Mask($85..88)
  442. store_condition_mask           $85 = CondMask
  443. copy_4_slots_unmasked          $86..89 = m₃
  444. copy_slot_unmasked             $90 = scalar
  445. copy_slot_unmasked             $91 = scalar
  446. copy_slot_unmasked             $92 = scalar
  447. copy_slot_unmasked             $93 = scalar
  448. cmpne_4_floats                 $86..89 = notEqual($86..89, $90..93)
  449. bitwise_or_2_ints              $86..87 |= $88..89
  450. bitwise_or_int                 $86 |= $87
  451. merge_condition_mask           CondMask = $85 & $86
  452. copy_constant                  $87 = 0
  453. copy_slot_masked               [test_no_op_mat2_X_scalar].result = Mask($87)
  454. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  455. load_condition_mask            CondMask = $85
  456. copy_slot_unmasked             $85 = scalar
  457. swizzle_4                      $85..88 = ($85..88).xxxx
  458. copy_4_slots_unmasked          $89..92 = z₃
  459. sub_4_floats                   $85..88 -= $89..92
  460. copy_4_slots_masked            m₃ = Mask($85..88)
  461. copy_4_slots_unmasked          $85..88 = z₃
  462. copy_slot_unmasked             $89 = scalar
  463. swizzle_4                      $89..92 = ($89..92).xxxx
  464. sub_4_floats                   $85..88 -= $89..92
  465. copy_4_slots_masked            m₃ = Mask($85..88)
  466. store_condition_mask           $85 = CondMask
  467. copy_4_slots_unmasked          $86..89 = m₃
  468. splat_4_constants              $90..93 = 0
  469. copy_slot_unmasked             $94 = scalar
  470. copy_slot_unmasked             $95 = scalar
  471. copy_slot_unmasked             $96 = scalar
  472. copy_slot_unmasked             $97 = scalar
  473. sub_4_floats                   $90..93 -= $94..97
  474. cmpne_4_floats                 $86..89 = notEqual($86..89, $90..93)
  475. bitwise_or_2_ints              $86..87 |= $88..89
  476. bitwise_or_int                 $86 |= $87
  477. merge_condition_mask           CondMask = $85 & $86
  478. copy_constant                  $87 = 0
  479. copy_slot_masked               [test_no_op_mat2_X_scalar].result = Mask($87)
  480. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  481. load_condition_mask            CondMask = $85
  482. splat_2_constants              $85..86 = 0
  483. swizzle_4                      $85..88 = ($85..88).yxxy
  484. copy_4_slots_masked            mm₃ = Mask($85..88)
  485. splat_2_constants              $85..86 = 0
  486. swizzle_4                      $85..88 = ($85..88).yxxy
  487. copy_4_slots_masked            mm₃ = Mask($85..88)
  488. copy_4_slots_unmasked          $89..92 = z₃
  489. cmpeq_4_floats                 $85..88 = equal($85..88, $89..92)
  490. bitwise_and_2_ints             $85..86 &= $87..88
  491. bitwise_and_int                $85 &= $86
  492. copy_slot_masked               [test_no_op_mat2_X_scalar].result = Mask($85)
  493. load_return_mask               RetMask = $84
  494. copy_slot_unmasked             $84 = [test_no_op_mat2_X_scalar].result
  495. label                          label 0x00000009
  496. copy_slot_masked               $83 = Mask($84)
  497. label                          label 0x00000003
  498. load_condition_mask            CondMask = $98
  499. copy_constant                  $52 = 0
  500. merge_condition_mask           CondMask = $82 & $83
  501. branch_if_no_lanes_active      branch_if_no_lanes_active +182 (label 2 at #683)
  502. stack_rewind
  503. store_return_mask              $53 = RetMask
  504. splat_4_constants              m₄(0..3) = 0
  505. splat_4_constants              m₄(4..7) = 0
  506. splat_4_constants              m₄(8), mm₄(0..2) = 0
  507. splat_4_constants              mm₄(3..6) = 0
  508. splat_2_constants              mm₄(7..8) = 0
  509. splat_2_constants              $54..55 = 0
  510. shuffle                        $54..62 = ($54..62)[1 0 0 0 1 0 0 0 1]
  511. copy_4_slots_unmasked          z₄(0..3) = $54..57
  512. copy_4_slots_unmasked          z₄(4..7) = $58..61
  513. copy_slot_unmasked             z₄(8) = $62
  514. splat_4_constants              s₁(0..3) = 0x3F800000 (1.0)
  515. splat_4_constants              s₁(4..7) = 0x3F800000 (1.0)
  516. copy_constant                  s₁(8) = 0x3F800000 (1.0)
  517. copy_uniform                   scalar₁ = testInputs(0)
  518. copy_slot_unmasked             $54 = scalar₁
  519. swizzle_3                      $54..56 = ($54..56).xxx
  520. copy_3_slots_unmasked          scalar3 = $54..56
  521. copy_constant                  $54 = 0
  522. copy_slot_unmasked             $55 = scalar₁
  523. shuffle                        $54..62 = ($54..62)[1 0 0 0 1 0 0 0 1]
  524. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  525. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  526. copy_slot_masked               m₄(8) = Mask($62)
  527. copy_constant                  $54 = 0
  528. copy_slot_unmasked             $55 = scalar₁
  529. shuffle                        $54..62 = ($54..62)[1 0 0 0 1 0 0 0 1]
  530. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  531. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  532. copy_slot_masked               m₄(8) = Mask($62)
  533. store_condition_mask           $54 = CondMask
  534. copy_4_slots_unmasked          $55..58 = m₄(0..3)
  535. copy_4_slots_unmasked          $59..62 = m₄(4..7)
  536. copy_slot_unmasked             $63 = m₄(8)
  537. copy_constant                  $64 = 0
  538. copy_slot_unmasked             $65 = scalar₁
  539. shuffle                        $64..72 = ($64..72)[1 0 0 0 1 0 0 0 1]
  540. cmpne_n_floats                 $55..63 = notEqual($55..63, $64..72)
  541. bitwise_or_4_ints              $56..59 |= $60..63
  542. bitwise_or_2_ints              $56..57 |= $58..59
  543. bitwise_or_int                 $56 |= $57
  544. bitwise_or_int                 $55 |= $56
  545. merge_condition_mask           CondMask = $54 & $55
  546. copy_constant                  $56 = 0
  547. copy_slot_masked               [test_no_op_mat3_X_scalar].result = Mask($56)
  548. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  549. load_condition_mask            CondMask = $54
  550. copy_slot_unmasked             $54 = scalar₁
  551. swizzle_4                      $54..57 = ($54..57).xxxx
  552. copy_4_slots_unmasked          $58..61 = $54..57
  553. copy_slot_unmasked             $62 = $61
  554. copy_4_slots_unmasked          $63..66 = s₁(0..3)
  555. copy_4_slots_unmasked          $67..70 = s₁(4..7)
  556. copy_slot_unmasked             $71 = s₁(8)
  557. div_n_floats                   $54..62 /= $63..71
  558. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  559. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  560. copy_slot_masked               m₄(8) = Mask($62)
  561. store_condition_mask           $54 = CondMask
  562. copy_4_slots_unmasked          $55..58 = m₄(0..3)
  563. copy_4_slots_unmasked          $59..62 = m₄(4..7)
  564. copy_slot_unmasked             $63 = m₄(8)
  565. copy_3_slots_unmasked          $64..66 = scalar3
  566. copy_3_slots_unmasked          $67..69 = scalar3
  567. copy_3_slots_unmasked          $70..72 = scalar3
  568. cmpne_n_floats                 $55..63 = notEqual($55..63, $64..72)
  569. bitwise_or_4_ints              $56..59 |= $60..63
  570. bitwise_or_2_ints              $56..57 |= $58..59
  571. bitwise_or_int                 $56 |= $57
  572. bitwise_or_int                 $55 |= $56
  573. merge_condition_mask           CondMask = $54 & $55
  574. copy_constant                  $56 = 0
  575. copy_slot_masked               [test_no_op_mat3_X_scalar].result = Mask($56)
  576. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  577. load_condition_mask            CondMask = $54
  578. copy_slot_unmasked             $54 = scalar₁
  579. swizzle_4                      $54..57 = ($54..57).xxxx
  580. copy_4_slots_unmasked          $58..61 = $54..57
  581. copy_slot_unmasked             $62 = $61
  582. copy_4_slots_unmasked          $63..66 = z₄(0..3)
  583. copy_4_slots_unmasked          $67..70 = z₄(4..7)
  584. copy_slot_unmasked             $71 = z₄(8)
  585. add_n_floats                   $54..62 += $63..71
  586. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  587. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  588. copy_slot_masked               m₄(8) = Mask($62)
  589. copy_4_slots_unmasked          $54..57 = z₄(0..3)
  590. copy_4_slots_unmasked          $58..61 = z₄(4..7)
  591. copy_slot_unmasked             $62 = z₄(8)
  592. copy_slot_unmasked             $63 = scalar₁
  593. swizzle_4                      $63..66 = ($63..66).xxxx
  594. copy_4_slots_unmasked          $67..70 = $63..66
  595. copy_slot_unmasked             $71 = $70
  596. add_n_floats                   $54..62 += $63..71
  597. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  598. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  599. copy_slot_masked               m₄(8) = Mask($62)
  600. store_condition_mask           $54 = CondMask
  601. copy_4_slots_unmasked          $55..58 = m₄(0..3)
  602. copy_4_slots_unmasked          $59..62 = m₄(4..7)
  603. copy_slot_unmasked             $63 = m₄(8)
  604. copy_3_slots_unmasked          $64..66 = scalar3
  605. copy_3_slots_unmasked          $67..69 = scalar3
  606. copy_3_slots_unmasked          $70..72 = scalar3
  607. cmpne_n_floats                 $55..63 = notEqual($55..63, $64..72)
  608. bitwise_or_4_ints              $56..59 |= $60..63
  609. bitwise_or_2_ints              $56..57 |= $58..59
  610. bitwise_or_int                 $56 |= $57
  611. bitwise_or_int                 $55 |= $56
  612. merge_condition_mask           CondMask = $54 & $55
  613. copy_constant                  $56 = 0
  614. copy_slot_masked               [test_no_op_mat3_X_scalar].result = Mask($56)
  615. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  616. load_condition_mask            CondMask = $54
  617. copy_slot_unmasked             $54 = scalar₁
  618. swizzle_4                      $54..57 = ($54..57).xxxx
  619. copy_4_slots_unmasked          $58..61 = $54..57
  620. copy_slot_unmasked             $62 = $61
  621. copy_4_slots_unmasked          $63..66 = z₄(0..3)
  622. copy_4_slots_unmasked          $67..70 = z₄(4..7)
  623. copy_slot_unmasked             $71 = z₄(8)
  624. sub_n_floats                   $54..62 -= $63..71
  625. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  626. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  627. copy_slot_masked               m₄(8) = Mask($62)
  628. copy_4_slots_unmasked          $54..57 = z₄(0..3)
  629. copy_4_slots_unmasked          $58..61 = z₄(4..7)
  630. copy_slot_unmasked             $62 = z₄(8)
  631. copy_slot_unmasked             $63 = scalar₁
  632. swizzle_4                      $63..66 = ($63..66).xxxx
  633. copy_4_slots_unmasked          $67..70 = $63..66
  634. copy_slot_unmasked             $71 = $70
  635. sub_n_floats                   $54..62 -= $63..71
  636. copy_4_slots_masked            m₄(0..3) = Mask($54..57)
  637. copy_4_slots_masked            m₄(4..7) = Mask($58..61)
  638. copy_slot_masked               m₄(8) = Mask($62)
  639. store_condition_mask           $54 = CondMask
  640. copy_4_slots_unmasked          $55..58 = m₄(0..3)
  641. copy_4_slots_unmasked          $59..62 = m₄(4..7)
  642. copy_slot_unmasked             $63 = m₄(8)
  643. splat_4_constants              $64..67 = 0
  644. splat_4_constants              $68..71 = 0
  645. copy_constant                  $72 = 0
  646. copy_3_slots_unmasked          $73..75 = scalar3
  647. copy_3_slots_unmasked          $76..78 = scalar3
  648. copy_3_slots_unmasked          $79..81 = scalar3
  649. sub_n_floats                   $64..72 -= $73..81
  650. cmpne_n_floats                 $55..63 = notEqual($55..63, $64..72)
  651. bitwise_or_4_ints              $56..59 |= $60..63
  652. bitwise_or_2_ints              $56..57 |= $58..59
  653. bitwise_or_int                 $56 |= $57
  654. bitwise_or_int                 $55 |= $56
  655. merge_condition_mask           CondMask = $54 & $55
  656. copy_constant                  $56 = 0
  657. copy_slot_masked               [test_no_op_mat3_X_scalar].result = Mask($56)
  658. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  659. load_condition_mask            CondMask = $54
  660. splat_2_constants              $54..55 = 0
  661. shuffle                        $54..62 = ($54..62)[1 0 0 0 1 0 0 0 1]
  662. copy_4_slots_masked            mm₄(0..3) = Mask($54..57)
  663. copy_4_slots_masked            mm₄(4..7) = Mask($58..61)
  664. copy_slot_masked               mm₄(8) = Mask($62)
  665. splat_2_constants              $54..55 = 0
  666. shuffle                        $54..62 = ($54..62)[1 0 0 0 1 0 0 0 1]
  667. copy_4_slots_masked            mm₄(0..3) = Mask($54..57)
  668. copy_4_slots_masked            mm₄(4..7) = Mask($58..61)
  669. copy_slot_masked               mm₄(8) = Mask($62)
  670. copy_4_slots_unmasked          $63..66 = z₄(0..3)
  671. copy_4_slots_unmasked          $67..70 = z₄(4..7)
  672. copy_slot_unmasked             $71 = z₄(8)
  673. cmpeq_n_floats                 $54..62 = equal($54..62, $63..71)
  674. bitwise_and_4_ints             $55..58 &= $59..62
  675. bitwise_and_2_ints             $55..56 &= $57..58
  676. bitwise_and_int                $55 &= $56
  677. bitwise_and_int                $54 &= $55
  678. copy_slot_masked               [test_no_op_mat3_X_scalar].result = Mask($54)
  679. load_return_mask               RetMask = $53
  680. copy_slot_unmasked             $53 = [test_no_op_mat3_X_scalar].result
  681. label                          label 0x0000000A
  682. copy_slot_masked               $52 = Mask($53)
  683. label                          label 0x00000002
  684. load_condition_mask            CondMask = $82
  685. copy_constant                  $0 = 0
  686. merge_condition_mask           CondMask = $51 & $52
  687. branch_if_no_lanes_active      branch_if_no_lanes_active +219 (label 1 at #906)
  688. store_return_mask              $1 = RetMask
  689. splat_4_constants              m₅(0..3) = 0
  690. splat_4_constants              m₅(4..7) = 0
  691. splat_4_constants              m₅(8..11) = 0
  692. splat_4_constants              m₅(12..15) = 0
  693. splat_4_constants              mm₅(0..3) = 0
  694. splat_4_constants              mm₅(4..7) = 0
  695. splat_4_constants              mm₅(8..11) = 0
  696. splat_4_constants              mm₅(12..15) = 0
  697. splat_2_constants              $2..3 = 0
  698. shuffle                        $2..17 = ($2..17)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  699. copy_4_slots_unmasked          z₅(0..3) = $2..5
  700. copy_4_slots_unmasked          z₅(4..7) = $6..9
  701. copy_4_slots_unmasked          z₅(8..11) = $10..13
  702. copy_4_slots_unmasked          z₅(12..15) = $14..17
  703. splat_4_constants              s₂(0..3) = 0x3F800000 (1.0)
  704. splat_4_constants              s₂(4..7) = 0x3F800000 (1.0)
  705. splat_4_constants              s₂(8..11) = 0x3F800000 (1.0)
  706. splat_4_constants              s₂(12..15) = 0x3F800000 (1.0)
  707. copy_uniform                   scalar₂ = testInputs(0)
  708. copy_slot_unmasked             $2 = scalar₂
  709. swizzle_4                      $2..5 = ($2..5).xxxx
  710. copy_4_slots_unmasked          scalar4 = $2..5
  711. copy_constant                  $2 = 0
  712. copy_slot_unmasked             $3 = scalar₂
  713. shuffle                        $2..17 = ($2..17)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  714. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  715. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  716. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  717. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  718. copy_constant                  $2 = 0
  719. copy_slot_unmasked             $3 = scalar₂
  720. shuffle                        $2..17 = ($2..17)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  721. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  722. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  723. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  724. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  725. store_condition_mask           $2 = CondMask
  726. copy_4_slots_unmasked          $3..6 = m₅(0..3)
  727. copy_4_slots_unmasked          $7..10 = m₅(4..7)
  728. copy_4_slots_unmasked          $11..14 = m₅(8..11)
  729. copy_4_slots_unmasked          $15..18 = m₅(12..15)
  730. copy_constant                  $19 = 0
  731. copy_slot_unmasked             $20 = scalar₂
  732. shuffle                        $19..34 = ($19..34)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  733. cmpne_n_floats                 $3..18 = notEqual($3..18, $19..34)
  734. bitwise_or_4_ints              $11..14 |= $15..18
  735. bitwise_or_4_ints              $7..10 |= $11..14
  736. bitwise_or_4_ints              $3..6 |= $7..10
  737. bitwise_or_2_ints              $3..4 |= $5..6
  738. bitwise_or_int                 $3 |= $4
  739. merge_condition_mask           CondMask = $2 & $3
  740. copy_constant                  $4 = 0
  741. copy_slot_masked               [test_no_op_mat4_X_scalar].result = Mask($4)
  742. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  743. load_condition_mask            CondMask = $2
  744. copy_slot_unmasked             $2 = scalar₂
  745. swizzle_4                      $2..5 = ($2..5).xxxx
  746. copy_4_slots_unmasked          $6..9 = $2..5
  747. copy_4_slots_unmasked          $10..13 = $6..9
  748. copy_4_slots_unmasked          $14..17 = $10..13
  749. copy_4_slots_unmasked          $18..21 = s₂(0..3)
  750. copy_4_slots_unmasked          $22..25 = s₂(4..7)
  751. copy_4_slots_unmasked          $26..29 = s₂(8..11)
  752. copy_4_slots_unmasked          $30..33 = s₂(12..15)
  753. div_n_floats                   $2..17 /= $18..33
  754. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  755. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  756. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  757. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  758. store_condition_mask           $2 = CondMask
  759. copy_4_slots_unmasked          $3..6 = m₅(0..3)
  760. copy_4_slots_unmasked          $7..10 = m₅(4..7)
  761. copy_4_slots_unmasked          $11..14 = m₅(8..11)
  762. copy_4_slots_unmasked          $15..18 = m₅(12..15)
  763. copy_4_slots_unmasked          $19..22 = scalar4
  764. copy_4_slots_unmasked          $23..26 = scalar4
  765. copy_4_slots_unmasked          $27..30 = scalar4
  766. copy_4_slots_unmasked          $31..34 = scalar4
  767. cmpne_n_floats                 $3..18 = notEqual($3..18, $19..34)
  768. bitwise_or_4_ints              $11..14 |= $15..18
  769. bitwise_or_4_ints              $7..10 |= $11..14
  770. bitwise_or_4_ints              $3..6 |= $7..10
  771. bitwise_or_2_ints              $3..4 |= $5..6
  772. bitwise_or_int                 $3 |= $4
  773. merge_condition_mask           CondMask = $2 & $3
  774. copy_constant                  $4 = 0
  775. copy_slot_masked               [test_no_op_mat4_X_scalar].result = Mask($4)
  776. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  777. load_condition_mask            CondMask = $2
  778. copy_slot_unmasked             $2 = scalar₂
  779. swizzle_4                      $2..5 = ($2..5).xxxx
  780. copy_4_slots_unmasked          $6..9 = $2..5
  781. copy_4_slots_unmasked          $10..13 = $6..9
  782. copy_4_slots_unmasked          $14..17 = $10..13
  783. copy_4_slots_unmasked          $18..21 = z₅(0..3)
  784. copy_4_slots_unmasked          $22..25 = z₅(4..7)
  785. copy_4_slots_unmasked          $26..29 = z₅(8..11)
  786. copy_4_slots_unmasked          $30..33 = z₅(12..15)
  787. add_n_floats                   $2..17 += $18..33
  788. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  789. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  790. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  791. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  792. copy_4_slots_unmasked          $2..5 = z₅(0..3)
  793. copy_4_slots_unmasked          $6..9 = z₅(4..7)
  794. copy_4_slots_unmasked          $10..13 = z₅(8..11)
  795. copy_4_slots_unmasked          $14..17 = z₅(12..15)
  796. copy_slot_unmasked             $18 = scalar₂
  797. swizzle_4                      $18..21 = ($18..21).xxxx
  798. copy_4_slots_unmasked          $22..25 = $18..21
  799. copy_4_slots_unmasked          $26..29 = $22..25
  800. copy_4_slots_unmasked          $30..33 = $26..29
  801. add_n_floats                   $2..17 += $18..33
  802. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  803. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  804. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  805. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  806. store_condition_mask           $2 = CondMask
  807. copy_4_slots_unmasked          $3..6 = m₅(0..3)
  808. copy_4_slots_unmasked          $7..10 = m₅(4..7)
  809. copy_4_slots_unmasked          $11..14 = m₅(8..11)
  810. copy_4_slots_unmasked          $15..18 = m₅(12..15)
  811. copy_4_slots_unmasked          $19..22 = scalar4
  812. copy_4_slots_unmasked          $23..26 = scalar4
  813. copy_4_slots_unmasked          $27..30 = scalar4
  814. copy_4_slots_unmasked          $31..34 = scalar4
  815. cmpne_n_floats                 $3..18 = notEqual($3..18, $19..34)
  816. bitwise_or_4_ints              $11..14 |= $15..18
  817. bitwise_or_4_ints              $7..10 |= $11..14
  818. bitwise_or_4_ints              $3..6 |= $7..10
  819. bitwise_or_2_ints              $3..4 |= $5..6
  820. bitwise_or_int                 $3 |= $4
  821. merge_condition_mask           CondMask = $2 & $3
  822. copy_constant                  $4 = 0
  823. copy_slot_masked               [test_no_op_mat4_X_scalar].result = Mask($4)
  824. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  825. load_condition_mask            CondMask = $2
  826. copy_slot_unmasked             $2 = scalar₂
  827. swizzle_4                      $2..5 = ($2..5).xxxx
  828. copy_4_slots_unmasked          $6..9 = $2..5
  829. copy_4_slots_unmasked          $10..13 = $6..9
  830. copy_4_slots_unmasked          $14..17 = $10..13
  831. copy_4_slots_unmasked          $18..21 = z₅(0..3)
  832. copy_4_slots_unmasked          $22..25 = z₅(4..7)
  833. copy_4_slots_unmasked          $26..29 = z₅(8..11)
  834. copy_4_slots_unmasked          $30..33 = z₅(12..15)
  835. sub_n_floats                   $2..17 -= $18..33
  836. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  837. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  838. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  839. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  840. copy_4_slots_unmasked          $2..5 = z₅(0..3)
  841. copy_4_slots_unmasked          $6..9 = z₅(4..7)
  842. copy_4_slots_unmasked          $10..13 = z₅(8..11)
  843. copy_4_slots_unmasked          $14..17 = z₅(12..15)
  844. copy_slot_unmasked             $18 = scalar₂
  845. swizzle_4                      $18..21 = ($18..21).xxxx
  846. copy_4_slots_unmasked          $22..25 = $18..21
  847. copy_4_slots_unmasked          $26..29 = $22..25
  848. copy_4_slots_unmasked          $30..33 = $26..29
  849. sub_n_floats                   $2..17 -= $18..33
  850. copy_4_slots_masked            m₅(0..3) = Mask($2..5)
  851. copy_4_slots_masked            m₅(4..7) = Mask($6..9)
  852. copy_4_slots_masked            m₅(8..11) = Mask($10..13)
  853. copy_4_slots_masked            m₅(12..15) = Mask($14..17)
  854. store_condition_mask           $2 = CondMask
  855. copy_4_slots_unmasked          $3..6 = m₅(0..3)
  856. copy_4_slots_unmasked          $7..10 = m₅(4..7)
  857. copy_4_slots_unmasked          $11..14 = m₅(8..11)
  858. copy_4_slots_unmasked          $15..18 = m₅(12..15)
  859. splat_4_constants              $19..22 = 0
  860. splat_4_constants              $23..26 = 0
  861. splat_4_constants              $27..30 = 0
  862. splat_4_constants              $31..34 = 0
  863. copy_4_slots_unmasked          $35..38 = scalar4
  864. copy_4_slots_unmasked          $39..42 = scalar4
  865. copy_4_slots_unmasked          $43..46 = scalar4
  866. copy_4_slots_unmasked          $47..50 = scalar4
  867. sub_n_floats                   $19..34 -= $35..50
  868. cmpne_n_floats                 $3..18 = notEqual($3..18, $19..34)
  869. bitwise_or_4_ints              $11..14 |= $15..18
  870. bitwise_or_4_ints              $7..10 |= $11..14
  871. bitwise_or_4_ints              $3..6 |= $7..10
  872. bitwise_or_2_ints              $3..4 |= $5..6
  873. bitwise_or_int                 $3 |= $4
  874. merge_condition_mask           CondMask = $2 & $3
  875. copy_constant                  $4 = 0
  876. copy_slot_masked               [test_no_op_mat4_X_scalar].result = Mask($4)
  877. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  878. load_condition_mask            CondMask = $2
  879. splat_2_constants              $2..3 = 0
  880. shuffle                        $2..17 = ($2..17)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  881. copy_4_slots_masked            mm₅(0..3) = Mask($2..5)
  882. copy_4_slots_masked            mm₅(4..7) = Mask($6..9)
  883. copy_4_slots_masked            mm₅(8..11) = Mask($10..13)
  884. copy_4_slots_masked            mm₅(12..15) = Mask($14..17)
  885. splat_2_constants              $2..3 = 0
  886. shuffle                        $2..17 = ($2..17)[1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1]
  887. copy_4_slots_masked            mm₅(0..3) = Mask($2..5)
  888. copy_4_slots_masked            mm₅(4..7) = Mask($6..9)
  889. copy_4_slots_masked            mm₅(8..11) = Mask($10..13)
  890. copy_4_slots_masked            mm₅(12..15) = Mask($14..17)
  891. copy_4_slots_unmasked          $18..21 = z₅(0..3)
  892. copy_4_slots_unmasked          $22..25 = z₅(4..7)
  893. copy_4_slots_unmasked          $26..29 = z₅(8..11)
  894. copy_4_slots_unmasked          $30..33 = z₅(12..15)
  895. cmpeq_n_floats                 $2..17 = equal($2..17, $18..33)
  896. bitwise_and_4_ints             $10..13 &= $14..17
  897. bitwise_and_4_ints             $6..9 &= $10..13
  898. bitwise_and_4_ints             $2..5 &= $6..9
  899. bitwise_and_2_ints             $2..3 &= $4..5
  900. bitwise_and_int                $2 &= $3
  901. copy_slot_masked               [test_no_op_mat4_X_scalar].result = Mask($2)
  902. load_return_mask               RetMask = $1
  903. copy_slot_unmasked             $1 = [test_no_op_mat4_X_scalar].result
  904. label                          label 0x0000000B
  905. copy_slot_masked               $0 = Mask($1)
  906. label                          label 0x00000001
  907. load_condition_mask            CondMask = $51
  908. swizzle_4                      $0..3 = ($0..3).xxxx
  909. copy_4_uniforms                $4..7 = colorRed
  910. copy_4_uniforms                $8..11 = colorGreen
  911. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  912. load_src                       src.rgba = $0..3
