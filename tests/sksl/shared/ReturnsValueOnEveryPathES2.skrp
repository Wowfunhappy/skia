    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $8 = CondMask
    4. store_condition_mask           $21 = CondMask
    5. store_condition_mask           $27 = CondMask
    6. store_condition_mask           $15 = CondMask
    7. store_condition_mask           $33 = CondMask
    8. copy_constant                  $32 = 0xFFFFFFFF
    9. branch_if_all_lanes_equal      branch_if_all_lanes_equal +13 (#22), if $32 == 0x00000000 (0.0)
   10. branch_if_no_active_lanes      branch_if_no_active_lanes +11 (#21)
   11. copy_constant                  $34 = unknownInput
   12. copy_constant                  $35 = 0x3F800000 (1.0)
   13. cmpeq_float                    $34 = equal($34, $35)
   14. branch_if_all_lanes_equal      branch_if_all_lanes_equal +4 (#18), if $34 == 0x00000000 (0.0)
   15. copy_constant                  $35 = 0xFFFFFFFF
   16. copy_slot_masked               [return_on_both_sides].result = Mask($35)
   17. jump                           jump +3 (#20)
   18. copy_constant                  $35 = 0xFFFFFFFF
   19. copy_slot_masked               [return_on_both_sides].result = Mask($35)
   20. copy_slot_unmasked             $34 = [return_on_both_sides].result
   21. jump                           jump +2 (#23)
   22. zero_slot_unmasked             $34 = 0
   23. zero_slot_unmasked             $16 = 0
   24. merge_condition_mask           CondMask = $33 & $34
   25. branch_if_no_active_lanes      branch_if_no_active_lanes +24 (#49)
   26. store_return_mask              $17 = RetMask
   27. zero_slot_unmasked             x = 0
   28. store_loop_mask                $18 = LoopMask
   29. jump                           jump +10 (#39)
   30. zero_slot_unmasked             [for-loop continue mask 0] = 0
   31. copy_constant                  $19 = 0xFFFFFFFF
   32. copy_slot_masked               [for_inside_body].result = Mask($19)
   33. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   34. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   35. copy_slot_unmasked             $19 = x
   36. copy_constant                  $20 = 0x00000001 (1.401298e-45)
   37. add_int                        $19 += $20
   38. copy_slot_masked               x = Mask($19)
   39. copy_slot_unmasked             $19 = x
   40. copy_constant                  $20 = 0x0000000A (1.401298e-44)
   41. cmple_int                      $19 = lessThanEqual($19, $20)
   42. merge_loop_mask                LoopMask &= $19
   43. stack_rewind
   44. branch_if_any_active_lanes     branch_if_any_active_lanes -14 (#30)
   45. load_loop_mask                 LoopMask = $18
   46. load_return_mask               RetMask = $17
   47. copy_slot_unmasked             $17 = [for_inside_body].result
   48. copy_slot_masked               $16 = Mask($17)
   49. load_condition_mask            CondMask = $33
   50. zero_slot_unmasked             $28 = 0
   51. merge_condition_mask           CondMask = $15 & $16
   52. branch_if_no_active_lanes      branch_if_no_active_lanes +20 (#72)
   53. zero_slot_unmasked             x = 0
   54. store_loop_mask                $29 = LoopMask
   55. jump                           jump +7 (#62)
   56. zero_slot_unmasked             [for-loop continue mask 1] = 0
   57. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   58. copy_slot_unmasked             $30 = x
   59. copy_constant                  $31 = 0x00000001 (1.401298e-45)
   60. add_int                        $30 += $31
   61. copy_slot_masked               x = Mask($30)
   62. copy_slot_unmasked             $30 = x
   63. copy_constant                  $31 = 0x0000000A (1.401298e-44)
   64. cmple_int                      $30 = lessThanEqual($30, $31)
   65. merge_loop_mask                LoopMask &= $30
   66. stack_rewind
   67. branch_if_any_active_lanes     branch_if_any_active_lanes -11 (#56)
   68. load_loop_mask                 LoopMask = $29
   69. copy_constant                  $29 = 0xFFFFFFFF
   70. copy_slot_masked               [after_for_body].result = Mask($29)
   71. copy_slot_masked               $28 = Mask($29)
   72. load_condition_mask            CondMask = $15
   73. zero_slot_unmasked             $22 = 0
   74. merge_condition_mask           CondMask = $27 & $28
   75. branch_if_no_active_lanes      branch_if_no_active_lanes +32 (#107)
   76. store_return_mask              $23 = RetMask
   77. zero_slot_unmasked             x = 0
   78. store_loop_mask                $24 = LoopMask
   79. jump                           jump +18 (#97)
   80. zero_slot_unmasked             [for-loop continue mask 2] = 0
   81. copy_constant                  $25 = unknownInput
   82. copy_constant                  $26 = 0x3F800000 (1.0)
   83. cmpeq_float                    $25 = equal($25, $26)
   84. branch_if_all_lanes_equal      branch_if_all_lanes_equal +5 (#89), if $25 == 0x00000000 (0.0)
   85. copy_constant                  $26 = 0xFFFFFFFF
   86. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($26)
   87. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   88. jump                           jump +4 (#92)
   89. copy_constant                  $26 = 0xFFFFFFFF
   90. copy_slot_masked               [for_with_double_sided_conditional_return].result = Mask($26)
   91. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   92. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
   93. copy_slot_unmasked             $25 = x
   94. copy_constant                  $26 = 0x00000001 (1.401298e-45)
   95. add_int                        $25 += $26
   96. copy_slot_masked               x = Mask($25)
   97. copy_slot_unmasked             $25 = x
   98. copy_constant                  $26 = 0x0000000A (1.401298e-44)
   99. cmple_int                      $25 = lessThanEqual($25, $26)
  100. merge_loop_mask                LoopMask &= $25
  101. stack_rewind
  102. branch_if_any_active_lanes     branch_if_any_active_lanes -22 (#80)
  103. load_loop_mask                 LoopMask = $24
  104. load_return_mask               RetMask = $23
  105. copy_slot_unmasked             $23 = [for_with_double_sided_conditional_return].result
  106. copy_slot_masked               $22 = Mask($23)
  107. load_condition_mask            CondMask = $27
  108. zero_slot_unmasked             $9 = 0
  109. merge_condition_mask           CondMask = $21 & $22
  110. branch_if_no_active_lanes      branch_if_no_active_lanes +33 (#143)
  111. copy_constant                  $10 = unknownInput
  112. copy_constant                  $11 = 0x3F800000 (1.0)
  113. cmpeq_float                    $10 = equal($10, $11)
  114. branch_if_all_lanes_equal      branch_if_all_lanes_equal +4 (#118), if $10 == 0x00000000 (0.0)
  115. copy_constant                  $11 = 0xFFFFFFFF
  116. copy_slot_masked               [if_else_chain].result = Mask($11)
  117. jump                           jump +24 (#141)
  118. copy_constant                  $11 = unknownInput
  119. copy_constant                  $12 = 0x40000000 (2.0)
  120. cmpeq_float                    $11 = equal($11, $12)
  121. branch_if_all_lanes_equal      branch_if_all_lanes_equal +4 (#125), if $11 == 0x00000000 (0.0)
  122. zero_slot_unmasked             $12 = 0
  123. copy_slot_masked               [if_else_chain].result = Mask($12)
  124. jump                           jump +17 (#141)
  125. copy_constant                  $12 = unknownInput
  126. copy_constant                  $13 = 0x40400000 (3.0)
  127. cmpeq_float                    $12 = equal($12, $13)
  128. branch_if_all_lanes_equal      branch_if_all_lanes_equal +4 (#132), if $12 == 0x00000000 (0.0)
  129. copy_constant                  $13 = 0xFFFFFFFF
  130. copy_slot_masked               [if_else_chain].result = Mask($13)
  131. jump                           jump +10 (#141)
  132. copy_constant                  $13 = unknownInput
  133. copy_constant                  $14 = 0x40800000 (4.0)
  134. cmpeq_float                    $13 = equal($13, $14)
  135. branch_if_all_lanes_equal      branch_if_all_lanes_equal +4 (#139), if $13 == 0x00000000 (0.0)
  136. zero_slot_unmasked             $14 = 0
  137. copy_slot_masked               [if_else_chain].result = Mask($14)
  138. jump                           jump +3 (#141)
  139. copy_constant                  $14 = 0xFFFFFFFF
  140. copy_slot_masked               [if_else_chain].result = Mask($14)
  141. copy_slot_unmasked             $10 = [if_else_chain].result
  142. copy_slot_masked               $9 = Mask($10)
  143. load_condition_mask            CondMask = $21
  144. copy_4_constants               $0..3 = colorRed
  145. merge_condition_mask           CondMask = $8 & $9
  146. copy_4_constants               $4..7 = colorGreen
  147. copy_4_slots_masked            $0..3 = Mask($4..7)
  148. load_condition_mask            CondMask = $8
  149. copy_4_slots_unmasked          [main].result = $0..3
  150. load_src                       src.rgba = [main].result
