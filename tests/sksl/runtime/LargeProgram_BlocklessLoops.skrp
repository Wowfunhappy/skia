    1. store_src_rg                   xy = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. zero_slot_unmasked             i = 0
    4. zero_slot_unmasked             a = 0
    5. store_loop_mask                $0 = LoopMask
    6. jump                           jump +59 (#65)
    7. zero_slot_unmasked             [for-loop continue mask 0] = 0
    8. zero_slot_unmasked             b = 0
    9. store_loop_mask                $1 = LoopMask
   10. jump                           jump +43 (#53)
   11. zero_slot_unmasked             [for-loop continue mask 1] = 0
   12. zero_slot_unmasked             c = 0
   13. store_loop_mask                $2 = LoopMask
   14. jump                           jump +27 (#41)
   15. zero_slot_unmasked             [for-loop continue mask 2] = 0
   16. zero_slot_unmasked             d = 0
   17. store_loop_mask                $3 = LoopMask
   18. jump                           jump +11 (#29)
   19. zero_slot_unmasked             [for-loop continue mask 3] = 0
   20. copy_slot_unmasked             $4 = i
   21. copy_constant                  $5 = 0x00000001 (1.401298e-45)
   22. add_int                        $4 += $5
   23. copy_slot_masked               i = Mask($4)
   24. reenable_loop_mask             LoopMask |= [for-loop continue mask 3]
   25. copy_slot_unmasked             $4 = d
   26. copy_constant                  $5 = 0x00000001 (1.401298e-45)
   27. add_int                        $4 += $5
   28. copy_slot_masked               d = Mask($4)
   29. copy_slot_unmasked             $4 = d
   30. copy_constant                  $5 = 0x0000000A (1.401298e-44)
   31. cmplt_int                      $4 = lessThan($4, $5)
   32. merge_loop_mask                LoopMask &= $4
   33. stack_rewind
   34. branch_if_any_active_lanes     branch_if_any_active_lanes -15 (#19)
   35. load_loop_mask                 LoopMask = $3
   36. reenable_loop_mask             LoopMask |= [for-loop continue mask 2]
   37. copy_slot_unmasked             $3 = c
   38. copy_constant                  $4 = 0x00000001 (1.401298e-45)
   39. add_int                        $3 += $4
   40. copy_slot_masked               c = Mask($3)
   41. copy_slot_unmasked             $3 = c
   42. copy_constant                  $4 = 0x0000000A (1.401298e-44)
   43. cmplt_int                      $3 = lessThan($3, $4)
   44. merge_loop_mask                LoopMask &= $3
   45. stack_rewind
   46. branch_if_any_active_lanes     branch_if_any_active_lanes -31 (#15)
   47. load_loop_mask                 LoopMask = $2
   48. reenable_loop_mask             LoopMask |= [for-loop continue mask 1]
   49. copy_slot_unmasked             $2 = b
   50. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   51. add_int                        $2 += $3
   52. copy_slot_masked               b = Mask($2)
   53. copy_slot_unmasked             $2 = b
   54. copy_constant                  $3 = 0x0000000A (1.401298e-44)
   55. cmplt_int                      $2 = lessThan($2, $3)
   56. merge_loop_mask                LoopMask &= $2
   57. stack_rewind
   58. branch_if_any_active_lanes     branch_if_any_active_lanes -47 (#11)
   59. load_loop_mask                 LoopMask = $1
   60. reenable_loop_mask             LoopMask |= [for-loop continue mask 0]
   61. copy_slot_unmasked             $1 = a
   62. copy_constant                  $2 = 0x00000001 (1.401298e-45)
   63. add_int                        $1 += $2
   64. copy_slot_masked               a = Mask($1)
   65. copy_slot_unmasked             $1 = a
   66. copy_constant                  $2 = 0x0000000A (1.401298e-44)
   67. cmplt_int                      $1 = lessThan($1, $2)
   68. merge_loop_mask                LoopMask &= $1
   69. stack_rewind
   70. branch_if_any_active_lanes     branch_if_any_active_lanes -63 (#7)
   71. load_loop_mask                 LoopMask = $0
   72. zero_slot_unmasked             $0 = 0
   73. swizzle_4                      $0..3 = ($0..3).xxxx
   74. copy_4_slots_masked            [main].result = Mask($0..3)
   75. load_src                       src.rgba = [main].result
